// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OutcomeManagementSystem.Data;

namespace OutcomeManagementSystem.Migrations
{
    [DbContext(typeof(OutcomeManagementSystemContext))]
    [Migration("20210319234138_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OutcomeManagementSystem.Models.CLO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramOutcomeID")
                        .HasColumnType("int");

                    b.Property<int>("SO_KPIID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("CLO");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CLOID")
                        .HasColumnType("int");

                    b.Property<string>("Concentration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("PreReqID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.PreReq", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("PreReq");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.ProgramOutcome", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CLOID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CLOID");

                    b.ToTable("ProgramOutcome");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.SO_KPI", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CLOID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentOutcomeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CLOID");

                    b.ToTable("SO_KPI");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.StudentOutcome", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SO_KPIID")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SO_KPIID");

                    b.ToTable("StudentOutcome");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.CLO", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.Course", null)
                        .WithMany("CLOs")
                        .HasForeignKey("CourseID");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.PreReq", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.Course", "Course")
                        .WithMany("PreReqs")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.ProgramOutcome", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.CLO", null)
                        .WithMany("ProgramOutcomes")
                        .HasForeignKey("CLOID");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.SO_KPI", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.CLO", null)
                        .WithMany("SO_KPIs")
                        .HasForeignKey("CLOID");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.StudentOutcome", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.SO_KPI", null)
                        .WithMany("StudentOutcomes")
                        .HasForeignKey("SO_KPIID");
                });
#pragma warning restore 612, 618
        }
    }
}
