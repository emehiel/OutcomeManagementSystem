// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OutcomeManagementSystem.Data;

namespace OutcomeManagementSystem.Migrations
{
    [DbContext(typeof(OutcomeManagementSystemContext))]
    partial class OutcomeManagementSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OutcomeManagementSystem.Models.CLO", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramOutcomeID")
                        .HasColumnType("int");

                    b.Property<int>("SO_KPIID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("ProgramOutcomeID");

                    b.HasIndex("SO_KPIID");

                    b.ToTable("CLO");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Concentration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.CourseCoordinator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CourseID")
                        .IsUnique();

                    b.ToTable("CourseCoordinators");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.PreReqMap", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseDept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("CourseNumber")
                        .HasColumnType("int");

                    b.Property<string>("PreReqDept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreReqID")
                        .HasColumnType("int");

                    b.Property<int>("PreReqNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("PreReqID");

                    b.ToTable("PreReqMaps");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.ProgramOutcome", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concentration")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProgramOutcome");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.SO_KPI", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentOutcomeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentOutcomeID");

                    b.ToTable("SO_KPI");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.StudentOutcome", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concentration")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StudentOutcome");
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.CLO", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.Course", "Course")
                        .WithMany("CLOs")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OutcomeManagementSystem.Models.ProgramOutcome", "ProgramOutcome")
                        .WithMany("CLOs")
                        .HasForeignKey("ProgramOutcomeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OutcomeManagementSystem.Models.SO_KPI", "SO_KPI")
                        .WithMany()
                        .HasForeignKey("SO_KPIID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.CourseCoordinator", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.Course", "Courses")
                        .WithOne("CourseCoordinator")
                        .HasForeignKey("OutcomeManagementSystem.Models.CourseCoordinator", "CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.PreReqMap", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OutcomeManagementSystem.Models.Course", "PreReq")
                        .WithMany()
                        .HasForeignKey("PreReqID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OutcomeManagementSystem.Models.SO_KPI", b =>
                {
                    b.HasOne("OutcomeManagementSystem.Models.StudentOutcome", "StudentOutcome")
                        .WithMany("SO_KPIs")
                        .HasForeignKey("StudentOutcomeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
