@page
@model OutcomeManagementSystem.Pages.Courses.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@{
    var prevDisabled = !Model.CourseIndex.HasPrevious ? "disabled" : "";
    var nextDisabled = !Model.CourseIndex.HasNext ? "disabled" : "";

}
<div class="text-center">
    <a asp-page="./Details"
       asp-route-id="@(Model.Course.ID - 1)"
       class="btn rounded-pill border-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Details"
       asp-route-id="@(Model.Course.ID + 1)"
       class="btn rounded-pill border-primary @nextDisabled">
        Next
    </a>
</div>

<div>
    <h4>Course</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Department)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Department)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Number)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Number)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Units)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Units)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.CourseCoordinator)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.CourseCoordinator.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Concentration)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Concentration)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Quarter)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Quarter)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Year)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Year)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.PreReqs)
        </dt>
        <dd class="col-sm-10">
            <table class="table">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Course.PreReqs.First().ReqCourse.Department)</th>
                    <th>@Html.DisplayNameFor(model => model.Course.PreReqs.First().ReqCourse.Number)</th>
                    <th>@Html.DisplayNameFor(model => model.Course.PreReqs.First().ReqCourse.Title)</th>
                </tr>
                @foreach (var item in Model.Course.PreReqs)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReqCourse.Department)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReqCourse.Number)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReqCourse.Title)
                        </td>
                    </tr>
                }
            </table>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.CLOs)
        </dt>
        <dd class="col-sm-10">
            <table class="table">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Course.CLOs.First().Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Course.CLOs.First().ProgramOutcome.Concentration)</th>
                    <th>@Html.DisplayNameFor(model => model.Course.CLOs.First().SO_KPI.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Course.CLOs.First().CLOCode)</th>
                </tr>
                @foreach (var item in Model.Course.CLOs)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProgramOutcome.Concentration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SO_KPI.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CLOCode)
                </td>
            </tr>
                }
            </table>
        </dd>

    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Course.ID">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>
